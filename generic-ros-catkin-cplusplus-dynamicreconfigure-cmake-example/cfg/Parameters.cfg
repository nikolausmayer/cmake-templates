#!/usr/bin/env python
PACKAGE = "generic_package"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

custom_string_type_enum = gen.enum([
        ## Description, Type, Value, Description
        gen.const("choice_A_type", str_t, "choice_A", "custom type A"),
        gen.const("choice_B_type", str_t, "choice_B", "custom type B"),
    ],
    "a custom type enum"
)

## (The "Level" value is somewhat exotic and I have never seen it used. "0" is a safe choice.)

## Name, Type, Level, Description, Default value
gen.add("generic_custom_type_parameter", str_t, 0, "generic custom type with string values", "choice_A", edit_method=custom_string_type_enum)
## Name, Type, Level, Description, Default value, Min value, Max value
gen.add("generic_float_parameter", double_t, 0, "generic float", 0, -1000, 1000)
## Name, Type, Level, Description, Default value, Min value, Max value
gen.add("generic_int_parameter", int_t, 0, "generic int", 0, -1000, 1000)
## Name, Type, Level, Description, Default value
gen.add("generic_bool_parameter", bool_t, 0, "generic bool", True)
## Name, Type, Level, Description, Default value
gen.add("generic_string_parameter", str_t, 0, "generic string", "generic string value")

exit(gen.generate(PACKAGE, "generic_node", "Parameters"))

